---
- name: add official repository of PostgreSQL
  apt_repository:
    repo: deb http://apt.postgresql.org/pub/repos/apt buster-pgdg main
    state: present
    filename: pgdg
    update_cache: no

- name: add PostgreSQL package signing key to the list of trusted keys
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc

- name: install PostgreSQL
  apt:
    name: "postgresql-{{ postgresql_version_major }}"
    update_cache: yes

- name: add official repository of Timescaledb
  apt_repository:
    repo: deb https://packagecloud.io/timescale/timescaledb/debian buster main
    state: present
    filename: timescaledb
    update_cache: no
  register: timescaledb_repo

- name: add GPG signing key for Timescaledb
  become: true
  apt_key:
    url: https://packagecloud.io/timescale/timescaledb/gpgkey
    state: present
    validate_certs: true

- name: install Timescaledb
  apt:
    name: "timescaledb-2-postgresql-{{ postgresql_version_major }}"
    state: present
    update_cache: yes

- name: create PostgreSQL configuration file
  template:
    src: postgresql.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version_major }}/main/postgresql.conf"
    mode: 0644

- name: ensure PostgreSQL is started
  service:
    name: postgresql
    state: started

- name: create dofus market bot PostgreSQL user
  become_user: postgres
  postgresql_user:
    name: "{{ dofus_market_bot_db_user }}"
    password: "{{ dofus_market_bot_db_user_password }}"

- name: create grafana PostgreSQL user
  become_user: postgres
  postgresql_user:
    name: "{{ grafana_db_user }}"
    password: "{{ grafana_db_user_password }}"

- name: grant Grafana user SELECT permission on Dofus Market database
  become_user: postgres
  postgresql_privs:
    database: "{{ dofus_market_db }}"
    privs: SELECT
    objs: items,servers,item_prices
    role: "{{ grafana_db_user }}"

- name: create Dofus Market PostgreSQL database
  become_user: postgres
  postgresql_db:
    name: "{{ dofus_market_db }}"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8

- name: create Datadog PostgreSQL user
  become_user: postgres
  postgresql_user:
    name: "{{ datadog_db_user }}"
    groups: pg_monitor

- name: grant Datadog user SELECT permission on Dofus Market database
  become_user: postgres
  postgresql_privs:
    database: "{{ dofus_market_db }}"
    privs: SELECT
    objs: ALL_IN_SCHEMA
    role: "{{ datadog_db_user }}"

- name: disable logging for Datadog user in Dofus Market database
  become_user: postgres
  postgresql_query:
    db: "{{ dofus_market_db }}"
    query: "ALTER ROLE \"{{ datadog_db_user }}\" SET log_min_duration_statement = -1"

- name: enable Timescaledb extension
  become_user: postgres
  postgresql_query:
    db: "{{ dofus_market_db }}"
    query: "CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;"

- name: tune PostgreSQL for Timescaledb
  command: timescaledb-tune -yes

- name: restart PostgreSQL
  service:
    name: postgresql
    enabled: yes
    state: restarted
